# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  cmake-build:
    docker:
      # See: https://circleci.com/docs/configuration-reference/#executor-job
      - image: ubuntu:22.04
    steps:
      # See: https://circleci.com/docs/configuration-reference/#steps
      - checkout
      - run:
          name: Set noninteractive environment
          command: echo 'export DEBIAN_FRONTEND=noninteractive' >> $BASH_ENV
      - run:
          name: Install dependencies
          command: |
            apt-get update --assume-yes
            # NOTE For some obscure reason, iwyu does not print anything if clazy
            # is not installed. So we would even have to install it, when we would
            # not need it otherwise.
            apt-get install --assume-yes --no-install-recommends cmake make clang clang-format liblcms2-dev liblcms2-2 pkgconf extra-cmake-modules qt6-base-dev qt6-base-dev-tools libqt6svg6-dev qt6-l10n-tools libegl-dev qt6-tools-dev qt6-tools-dev-tools git python3-pip doxygen graphviz wget clazy clang-tidy iwyu
            # The following commands are necessary for the qch build. And
            # it seems that ecm_add_qch() has still some explicit Qt5 dependencies:
            apt-get install --assume-yes --no-install-recommends qt6-documentation-tools texlive-latex-base qtbase5-dev qtbase5-dev-tools qttools5-dev
            # Version information about installed software:
            echo "pip version:" && pip --version
            pip install cmakelint
            echo "cmakelint version:" && cmakelint --version
            echo "doxygen version:" && doxygen --version
            echo "graphviz dot version:" && dot -V
            /usr/lib/qt6/bin/qhelpgenerator -v
            # The following commands make a graphical shell available
            # (necessary for generatescreenshots).
            apt-get install --assume-yes --no-install-recommends xvfb openbox fonts-noto-core
            export DISPLAY=':90'
            echo Xvfb status BEGIN
            ps aux | grep Xvfb
            echo Xvfb status END
            Xvfb :90 -ac -screen 0 1600x1200x24+32 &
            echo Xvfb status BEGIN
            ps aux | grep Xvfb
            echo Xvfb status END
            sleep 15s
            echo Xvfb status BEGIN
            ps aux | grep Xvfb
            echo Xvfb status END
            echo Xvfb log BEGIN
            cat /tmp/Xvfb.log
            echo Xvfb log END
            openbox &
            sleep 15s
            echo openbox status BEGIN
            ps aux | grep openbox
            echo openbox status END
      - run:
          name: Build CMake project
          command: |
            PARALLEL_PROCESSES=`nproc --all`
            echo Number of available CPU threads: $PARALLEL_PROCESSES
            rm --recursive --force build
            mkdir --parents build
            cd build
            cmake -DBUILD_WITH_QT6=ON ..
            cmake --build . --parallel $PARALLEL_PROCESSES
            cmake --build . --target install --parallel $PARALLEL_PROCESSES
            autotests/testhelperqttypes
            # cmake --build . --target test
            cd ..
            rm --recursive --force buildexamples
            mkdir --parents buildexamples
            cd buildexamples
            cmake -DBUILD_WITH_QT6=ON ../examples
            cmake --build . --parallel
            cd ..  

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  cmake-build-workflow:
    jobs:
      - cmake-build
