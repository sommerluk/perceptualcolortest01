# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  cmake-build:
    docker:
      # See: https://circleci.com/docs/configuration-reference/#executor-job
      - image: ubuntu:22.04
    steps:
      # See: https://circleci.com/docs/configuration-reference/#steps
      - checkout
      - run:
          name: Set noninteractive environment
          command: echo 'export DEBIAN_FRONTEND=noninteractive' >> $BASH_ENV
      - run:
          name: Install dependencies
          command: |
            apt-get update --assume-yes
            apt-get install --assume-yes --no-install-recommends cmake make clang clang-format liblcms2-dev liblcms2-2 pkgconf extra-cmake-modules qt6-base-dev qt6-base-dev-tools libqt6svg6-dev qt6-l10n-tools libegl-dev qt6-tools-dev qt6-tools-dev-tools git python3-pip doxygen graphviz wget clazy clang-tidy iwyu
      - run:
          name: Build CMake project
          command: |
            # The “.” command will execute the given script within the context of
            # the current script, which is necessary in order to preserve the
            # environment variables that are set by the given script.
            . scripts/export-environment.sh
            echo Number of available CPU threads: $PARALLEL_PROCESSES
            rm --recursive --force build
            mkdir --parents build
            cd build
            cmake -DBUILD_WITH_QT6=ON ..
            cmake --build . --parallel $PARALLEL_PROCESSES
            cmake --build . --target install --parallel $PARALLEL_PROCESSES
            cmake --build . --target test
            cd ..
            rm --recursive --force buildexamples
            mkdir --parents buildexamples
            cd buildexamples
            cmake -DBUILD_WITH_QT6=ON ../examples
            cmake --build . --parallel
            cd ..  

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  cmake-build-workflow:
    jobs:
      - cmake-build
